#!/bin/bash

libName="libQGLViewer"
version="2.3.0"

WebSuffix=""
WebDir="/www"
WebURL="http://www.libqglviewer.com"

version_major=`echo $version | cut -d"." -f1`
version_minor=`echo $version | cut -d"." -f2`
version_release=`echo $version | cut -d"." -f3`

libNameVersion="$libName-$version"
tarName="$libNameVersion.tar.gz"
tmp="/tmp"
test -d $tmp || tmp="/home/debunne/.tmp"
tmpDir="$tmp/$libNameVersion"
QGLViewerRootDir=`pwd`

# echo "$0 disabled for security"
# exit

if [ $# == 0 ]
then
  echo "Usage : $0 [web|rpm|deb]"
  exit
fi

echo "--- Packaging libQGLViewer version $version ---"

# Convert possible Windows encoding
find . -type f -name '*.cpp' -o -name '*.h' -o -name '*.ui' -o -name '*.html'  -o -name '*.txt' -o -name '*.pro' -o -name '*.pri' -o -name '*.ui' -o -name '*.ago' -o -name '*.css' -o -name '*.bwb' -exec dos2unix -o -p {} \; &> /tmp/error
grep -v "/\.svn/" /tmp/error
if [[ "$?" -eq "0" ]]
then
  echo "Error while converting newlines"
  grep -v "/\.svn/" /tmp/error
  exit 1
fi

function checkGrep()
{
  grep "$TARGET" $FILE > /dev/null
  if [[ "$?" -ne "0" ]]
  then
    echo "ERROR : $TARGET not found in $FILE"
    exit 1
  fi
}

function checkVersion()
{
  grep "^$START$VERSION" $FILE > /dev/null
  if [[ "$?" -ne "0" ]]
  then
    echo "Version found in $FILE is not $VERSION - Patching"
    sed s~"^$START.*"~"$START$VERSION"~ $FILE > $tmp/makeDist
    cp $tmp/makeDist $FILE
  fi
}

function makeDist()
{
  for source in $SOURCES
  do
    dir=$tmpDir/$TARGET/$(dirname $source)
    test -d $dir || mkdir -p $dir
    #echo "### cp $source $dir   depuis $(pwd)"
    cp $source $dir
  done
}




##################################################################
############        Checking version coherence        ############
##################################################################
echo "Checking version coherence"

VERSION=$version_major
START="%define version_major "
FILE="QGLViewer/qglviewer.spec"
checkVersion

VERSION=$version_minor
START="%define version_minor "
FILE="QGLViewer/qglviewer.spec"
checkVersion

VERSION=$version_revision
START="%define version_revision "
FILE="QGLViewer/qglviewer.spec"
checkVersion

VERSION=$version
START="VERSION = "
FILE="QGLViewer/QGLViewer.pro"
checkVersion

VERSION=$version
START="VERSION  = "
FILE="QGLViewer/QGLViewer.Qt2.3.pro"
checkVersion

hexVersion="0x0${version_major}0${version_minor}0${version_release}"
VERSION=$hexVersion
START="#define QGLVIEWER_VERSION "
FILE="QGLViewer/config.h"
checkVersion

VERSION="$version\""
START="PROJECT_NUMBER         = \"Version "
FILE="doc/Doxyfile"
checkVersion



##################################################################
############          Checking file integrity         ############
##################################################################
echo "Checking file integrity"

TARGET="Gilles Debunne <contact@libQGLViewer.com> $version"
FILE="QGLViewer/qglviewer.spec"
checkGrep

TARGET="<a href=\"changeLog.html\">.*$version"
FILE="doc/index.html"
checkGrep

for f in `ls QGLViewer/QGLViewer.pro examples/*/*.pro examples/contribs/*/*.pro examples/contribs/*/*/*.pro`
do
  case "$f" in
    "examples/debug/debug.pro"|"examples/contribs/contribs.pro"|"examples/contribs/agora/agora.pro"|"examples/contribs/blobWar/blobWar.pro")
    continue
    ;;
esac
  
  TARGET="^CONFIG.*release"
  FILE="$f"
  checkGrep
done


TARGET="^URL.*$WebURL"
FILE="QGLViewer/qglviewer.spec"
checkGrep

TARGET="version=\"3.0\""
FILE="QGLViewer/VRenderInterface.Qt3.ui"
checkGrep

TARGET="version=\"3.0\""
FILE="QGLViewer/ImageInterface.Qt3.ui"
checkGrep

TARGET="version=\"3.1\""
FILE="examples/interface/viewerInterface.Qt3.ui"
checkGrep






if [[ $1 == "rpm" ]] || [[ $1 == "deb" ]]
then
 
##################################################################
############            Collecting  sources            ###########
##################################################################
echo -n "Collecting : "

test -d $tmpDir && rm -rf $tmpDir
test -d $tmpDir || mkdir -p $tmpDir

# ----------------------------------------------

dos2unix -o -p CHANGELOG INSTALL README LICENCE gpl-warning &> /tmp/error
SOURCES="CHANGELOG INSTALL README LICENCE gpl-warning"
TARGET=""
makeDist

# ----------------------------------------------

echo -n "sources"
cd QGLViewer

rm -f ui_*.h
SOURCES="*.h *.cpp QGLViewer*.pro *.ui qglviewer_*.ts qglviewer-icon.xpm VRender/*.h VRender/*.cpp"
TARGET="QGLViewer"
makeDist

cd - > /dev/null

# ----------------------------------------------

echo -n " - examples"

function makeDistExample()
{
  #echo "makeDirsEx sur $DIR"
  name=$(basename $DIR)
  test -f $DIR/$name.pro || ( echo "No example $name.pro file - Aborting" && exit )

  TARGET="$name"
  FILE="$(dirname $DIR)/$(basename $(dirname $DIR)).pro"
  checkGrep

  dotPro="$DIR/$name.pro"
  subDirs=$(grep "SUBDIRS" $dotPro | sed s%"SUBDIRS *= *"%%)
  if [[ ! -z $subDirs ]]
  then
    for subDir in $subDirs
    do
      oldDir=$DIR
      oldName=$name
      DIR="$DIR/$subDir"
      makeDistExample
      DIR=$oldDir
      name=$oldName
    done
    SOURCES="$DIR/$name.pro"
    TARGET=""
    makeDist
  else 
    TARGET="^include( \.\./.*examples.pri )"
    FILE="$dotPro"
    checkGrep

    SOURCES="$name.pro *.cpp"
    distFiles=$(grep "DISTFILES" $dotPro | sed s%"DISTFILES.*= *"%%)
    SOURCES="$SOURCES $distFiles"
    TARGET="$DIR"
    cd $DIR
    ls *.h &> /dev/null && SOURCES="$SOURCES *.h"
    makeDist
    cd - > /dev/null
  fi
}


cd examples

SOURCES="examples.pro release.pri contribs/contribs.pro"
TARGET="examples"
makeDist

cd - > /dev/null

EXAMPLES_SKIPPED_DIRS="examples/contribs examples/rangeAxisConstraint examples/debug"
for dir in $(ls -d examples/* examples/contribs/*)
do
  test -d $dir || continue

  for r in $EXAMPLES_SKIPPED_DIRS
  do
    if [ $dir == $r ]
    then
      continue 2
    fi
  done
  DIR="$dir"
  makeDistExample
done

# ----------------------------------------------

echo " - doc"
cd doc

SOURCES="*.html *.css Doxyfile cwExtractor tabs.awk images/*jpg images/*png images/*bmp images/qglviewer.ico"
TARGET="doc"
makeDist

cd - > /dev/null

# ----------------------------------------------

cd designerPlugin

SOURCES="*.h *.cpp *.pro"
TARGET="designerPlugin"
makeDist

cd - > /dev/null




##################################################################
############            Filtering  sources            ############
##################################################################
echo -n "Filtering : "

cd $tmpDir

########### Filter root files
export LC_TIME="en"
date=`date "+%B %-d, %Y"`
for f in "gpl-warning" "CHANGELOG" "INSTALL" "LICENCE" "README"
do
  sed s:"#VERSION#":"$version":g $f | sed s%"#WEBURL#"%"$WebURL"%g | sed s:"#DATE#":"$date":g > $f.filtered
  mv $f.filtered $f
done


########### Filter translations

echo -n "sources"
cd QGLViewer
qmake
lupdate QGLViewer.pro 2> /dev/null
lrelease QGLViewer.pro 2> $tmp/lrelease

if [ `grep "untranslated" $tmp/lrelease | wc -l` != 0 ]
then
  echo "Untranslated QString exist - Aborting"
  exit
fi
cd - > /dev/null

########### Filter example .pro include release
echo -n " - pro"
sed s:"#VERSION_MAJOR#":"$version_major":g examples/release.pri > $tmp/release.filtered
mv $tmp/release.filtered examples/release.pri

function replaceIncludeRelease()
{
  #echo "replace sur $PRO"
  path="\.\."
  dir=$(dirname $(dirname $PRO))
  while [[ $dir != "." ]]
  do
    dir=$(dirname $dir)
    path="$path/\.\."
  done
  
  if [[ $(grep "^include.*examples.pri" $PRO) ]]
  then
    grep -v "^include.*examples.pri" $PRO > $tmp/proPatched.tmp
    sed s%"\.\./\.\."%"$path"% examples/release.pri > $tmp/release.pri
    cat $tmp/proPatched.tmp $tmp/release.pri > $PRO
  fi
}

for PRO in $(ls */*.pro */*/*.pro */*/*/*.pro */*/*/*/*.pro)
do
  replaceIncludeRelease
done
rm examples/release.pri

########### Create examples' web pages
echo -n " - examples"
cd examples
$QGLViewerRootDir/examples/makeDist
cd - > /dev/null

########### Add GPL warnings
echo -n " - copyright"
for f in `find . -name '*.h' -o -name '*.cpp'`
do
  cat gpl-warning $f > $f.bak
  mv $f.bak $f
done

vRenderCopyright="$QGLViewerRootDir/QGLViewer/VRender/copyright"
if [ ! -f $vRenderCopyright ]
then
  echo "No copyright in VRender"
  exit
fi

dos2unix -o -p $vRenderCopyright

for f in `find QGLViewer/VRender -name '*.h' -o -name '*.cpp'`
do
  cat $vRenderCopyright $f > $f.bak
  mv $f.bak $f
done

mv gpl-warning $tmp/

########### Filter doc
echo " - doc"
cd doc

### Date and version ###
for f in `ls *.html`
do
  date=`date -r $f "+%A, %B %-d, %Y"`
  sed s:"#VERSION#":"$version":g $f | sed s:"#VERSION_MAJOR#":"$version_major":g | sed s%"#WEBURL#"%"$WebURL"%g > $tmp/filtered
  sed s:"#DATE#":"$date":g $tmp/filtered > $f
done

### Doxygen ###
doxygen Doxyfile
rm doxygen.css Doxyfile

cd refManual
#doxytag -s search.idx >& /dev/null
test -f installdox && rm installdox

## Changing header menu in doxygen pages ##
# Removing unused pages
rm -f files.html globals.html globals_*.html *_8*.html namespace*.html dir_*.html dirs.html functions_rela.html functions_vars.html functions_0x*.html

# Patching functions pages
for f in $(ls functions_*.html)
do
  newName=$(echo $f | sed s%"_func"%%)
  grep -v "^Here is a list" $f | sed s%"functions_func"%"functions"%g | sed s%"| <a[^>]*>Variables</a>"%""%g | sed s%"| <a[^>]*>Related&nbsp;Functions</a>"%""%g | sed s%"<a[^>]*>All</a> |"%""%g > $newName-bis
  rm -r $f
  mv $newName-bis $newName
done


sed s%"This inheritance.*alphabetically:"%% hierarchy.html > $tmp/hierarchy.html
mv $tmp/hierarchy.html hierarchy.html

# Changing QGLViewer:: enums
for f in $(ls class*.html)
do
  sed s%">QGLViewer::\([A-Z_]*\)</a>"%">\1</a>"%g $f > $tmp/qgl
  mv $tmp/qgl $f
done

 
# Changing header menus
   #for f in `ls *.html *.php`
   #do
     #awk '/^<a class="qindex/ { gsub(" \\| ", ""); print }' $f > $tmp/header
     #sed s%"href=\"index.html\">Main"%"href=\"../index.html\">Main"% $tmp/header | sed s%"<a class=\"qindex\" href=\"globals.html\">File&nbsp;Members</a>"%% | sed s%"<a class=\"qindex\" href=\"namespaces.html\">Namespace List</a>"%% | sed s%"<a class=\"qindex\" href=\"annotated.*File&nbsp;List</a>"%% | sed s%"<a class=\"qindex\" href=\"globals.html\">File&nbsp;Members</a>"%% | sed s%"Class&nbsp;Members"%"All\&nbsp;Functions"% | sed s%"/a>"%"/a>\n"%g > $tmp/header.filtered
       #sed /"^<a class=\"qindex"/d $f | sed "/^<div class=\"qindex.*search.php/r $tmp/header.filtered" > $f.tmp
       #awk '/^<div class="nav">/ {skip=1; next} {if (skip) {skip=0; next} else print }' $f.tmp > $f
       #rm $f.tmp
     #done

for f in $(ls *.html *.php)
do
  if [ $f != "search.php" ]
  then
    awk -f ../tabs.awk $f > $tmp/tabs
    mv $tmp/tabs $f
  fi
done
rm ../tabs.awk
    
# Removing auto-links
for f in `ls class*.html | grep -v -- "-members.html"`
do
  sed s%"<a class=\"el\" href=\"$f\">\([^<]*\)</a>"%"\1"%g $f > $f.tmp
  mv $f.tmp $f
done

# Patching QtKeyboardModifiers and QtMouseButtons
for f in `ls *.html`
do
  sed s%"QtKeyboardModifiers"%"Qt::KeyboardModifiers"%g $f > $f.tmp
  sed s%"QtMouseButtons"%"Qt::MouseButtons"%g $f.tmp > $f
  rm $f.tmp
done

# Adding icon and libQGLViewer version
for f in $(ls *.html)
do
  sed /doxygen.css/a"<link rel=\"shortcut icon\" href=\"../images/qglviewer.ico\" type=\"image/x-icon\" /><link rel=\"icon\" href=\"../images/qglviewer.icon.png\" type=\"image/png\" />" $f > $f.tmp
  sed s/"Generated on .* for libQGLViewer by"/"libQGLViewer $version documentation generated by"/g $f.tmp > $f
  rm $f.tmp
done

cd - > /dev/null

# cwExtrator
./cwExtractor
cp qglviewer.cw ../QGLViewer
mv qglviewer.cw ../examples/interface
rm cwExtractor


  # Remove search engine (requires php).
  #rm refManual/search.idx refManual/search.php
  #for f in `ls refManual/*.html`
   # do
   # sed s%" <span class=\"search\".*</span>"%""% $f > $f.tmp
   # mv $f.tmp $f
  #done

echo "All files set in $tmpDir"
exit



##################################################################
############       Create example binaries            ############
##################################################################
echo " - Creating Linux binary examples"
exName="$libName-examples-linux"
exDir="$tmpDir/../$exName"
test -d $exDir || mkdir $exDir
rm -f $exDir/*

cp $rpmDir/BUILD/$libNameVersion/QGLViewer/libQGLViewer.so.2 $exDir
cp /usr/lib/libstdc++.so.5 $exDir

BIN_EXAMPLES="simpleViewer manipulatedFrame luxo select animation"
cd $rpmDir/BUILD/$libNameVersion/examples
for e in $BIN_EXAMPLES
do
  echo "   = $e"
  cd $e
  qmake INCLUDE_DIR=../.. LIB_DIR=../../QGLViewer >& /dev/null
  make > /dev/null
  cp $e $exDir
  cd - > /dev/null
done

cd $exDir
for f in `ls`
do
  strip $f
done

echo "These are Linux pre-compiled versions of some libQGLViewer examples." > readme.txt
echo >> readme.txt
echo "These examples were compiled on a Fedora Core 2 using Qt 3.3.3." >> readme.txt
echo "Rebuild from the sources to fit your configuration and for optimal results." >> readme.txt
echo >> readme.txt
echo "You have to add the current directory to your LD_LIBRARY_PATH in order to run the examples:" >> readme.txt
echo "> export LD_LIBRARY_PATH=.:\$LD_LIBRARY_PATH (if you use bash)" >> readme.txt
echo " (or use \"setenv LD_LIBRARY_PATH .:\$LD_LIBRARY_PATH\" with [t]csh)" >> readme.txt
echo >> readme.txt
echo "Note that these examples are not designed to be impressive by themselves." >> readme.txt
echo "What is impressive is that the library enables their creation with only few tens of lines of code !" >> readme.txt

cd ..
tar -czf $exName.tar.gz $exName



##################################################################
############            Create Win Zip                ############
##################################################################
echo " - Creating windows zip"

cd $tmpDir
mv CHANGELOG ChangeLog.txt
mv INSTALL Install.txt
mv LICENCE Licence.txt
mv README Readme.txt

# Add Qt 2.3 specific files
cat $tmp/gpl-warning $QGLViewerRootDir/QGLViewer/keySequence.h   > QGLViewer/keySequence.h
cat $tmp/gpl-warning $QGLViewerRootDir/QGLViewer/keySequence.cpp > QGLViewer/keySequence.cpp
cp $QGLViewerRootDir/QGLViewer/QGLViewer.Qt2.3.pro QGLViewer/
cp $QGLViewerRootDir/QGLViewer/ImageInterface.Qt2.ui QGLViewer/
cp $QGLViewerRootDir/QGLViewer/VRenderInterface.Qt2.ui QGLViewer/
cp $QGLViewerRootDir/examples/interface/viewerInterface.Qt2.ui examples/interface/

function addNamespace()
{
  str="class QGLVIEWER_EXPORT $1 : public $2"
  if [ `grep "$str" QGLViewer/$3.h | wc -l` -ne 1 ]
  then
      echo "Unrecognized syntax for class $class declaration. Cannot add qglviewer::"
      exit 1
  fi

  sed s%"$str"%"class QGLVIEWER_EXPORT $1 : public qglviewer::$2"% QGLViewer/$3.h > $tmp/addNamespace
  mv $tmp/addNamespace QGLViewer/$3.h 
}
#addNamespace SpinningFrame Frame spinningFrame
addNamespace ManipulatedFrame Frame manipulatedFrame
addNamespace ManipulatedCameraFrame ManipulatedFrame manipulatedCameraFrame

echo "Skipping recode of files for special characters"
#for f in `find . -name '*.h' -o -name '*.cpp' -o -name '*.html' -o -name '*.css' -o -name '*.txt'`
#do
#  recode ..pc $f
#done

cd ..
zip -qr $libNameVersion.zip $libNameVersion

fi






if [[ $1 == "rpm" ]]
then
##################################################################
############        Checking RPM configuration        ############
##################################################################

echo " - Checking RPM configuration"

rpmDir=`grep '^%_topdir' $HOME/.rpmmacros | awk '{print $2}'`
rpmTmpDir=`grep '^%_tmppath' $HOME/.rpmmacros | awk '{print $2}'`
rpmFindReq=`grep '^%__find_requires' $HOME/.rpmmacros | awk '{print $2}'`

for dir in SRPMS RPMS SPECS SOURCES BUILD
do
  if [ ! -d $rpmDir/$dir ]
  then
    echo " - RPM dir ($rpmDir/$dir) not found - Aborting"
    exit
  fi
done

if [ ! -d $rpmTmpDir ]
then
  echo " - RPM tmp dir ($rpmTmpDir) not found - Aborting"
  exit
fi

if [ ! -f $rpmFindReq ]
then
  echo " - RPM find requires ($rpmFindReq) not found - Aborting"
  exit
fi

##################################################################
############                Create RPM                ############
##################################################################

function checkRPMUpdate() {
  cd $tmpDir/..

  action="Create"

  if [ -f $tarName ]
  then
    mkdir previous$libName
    cd previous$libName
    tar -xzf ../$tarName
    cd ..
    diff -r $libNameVersion previous$libName/$libNameVersion > $tmp/qgldiff
    if [ ! -s $tmp/qgldiff ]
    then
      echo " - Sources did not change"
      if [ -f $rpmDir/SRPMS/$libNameVersion.src.rpm -a $rpmDir/SRPMS/$libNameVersion.src.rpm -nt $tarName ]
      then
        echo " - RPM is created and up to date"
	action="None"
      else
        echo " - RPM is not up to date"    
      fi
    else
      echo " - Sources have changed (see $tmp/qgldiff)"
    fi
    rm -rf previous$libName
  fi
}

checkRPMUpdate

if [ $action == "Create" ]
then  
  if [ `grep "^%__find_requires" ~/.rpmmacros | grep "/Bin/find-requires-non-nvidia" | wc -c` == 0 ]
  then
    echo "find-requires-non-nvidia not found in .rpmmacros - Abort"
    exit
  fi
  tar -czf $tarName $libNameVersion
  cp -f $tarName $rpmDir/SOURCES
  cp -f $QGLViewerRootDir/QGLViewer/qglviewer.spec $rpmDir/SPECS/$libNameVersion.spec
  cd $rpmDir/SPECS/
  echo " - RPM build... (see $tmp/QGLViewer.rpmbuild)"
  #echo " - ##### Commented"
  rpmbuild -ba $libNameVersion.spec >& $tmp/QGLViewer.rpmbuild
  if [ $? != 0 ]
  then
    echo "Problem in RPM creation - Abort"
    exit
  fi
fi

checkRPMUpdate
fi







##################################################################
############            Update web site               ############
##################################################################
echo " - Updating web site"

# echo "Canceled"
# exit

test -d $WebDir/src || mkdir -p $WebDir/src
if [[ ! -d $WebDir/src ]]
then
    echo " - Unable to reach $WebDir, aborting"
    exit
fi

cp -f $tarName $rpmDir/SRPMS/$libNameVersion-1.src.rpm $libNameVersion.zip $WebDir/src

# No more distribution prefix. Add libstdc++ if needed.
archExt="tar.gz"
cp -f $exName.tar.gz $WebDir/src/$exName.$archExt

for i in "i586" "i486" "i386"
do
  if [ -f $rpmDir/RPMS/$i/$libNameVersion-1.$i.rpm ]
  then
      ix86=$i
      break
  fi
done

if [ ! -f $rpmDir/RPMS/$ix86/$libNameVersion-1.$ix86.rpm ]
then
    echo "Unable to find ix86 dir in $rpmDir/RPMS/"
else
    cp -f $rpmDir/RPMS/$ix86/$libNameVersion-1.$ix86.rpm $WebDir/src/$libNameVersion.i586.rpm
    cp -f $rpmDir/RPMS/$ix86/$libName-devel-$version-1.$ix86.rpm $WebDir/src/$libName-devel-$version.i586.rpm
fi

cd $WebDir/src
rm md5sum.txt
md5sum `find . -type f | sort` > md5sum.txt
cd - > /dev/null
exit
fi # $1=rpm


if [ $1 == "win" ]
then
  echo "Creating release-win.pri"
  sed s:"#VERSION_MAJOR#":"$version_major":g examples/release.pri | sed s:"../../":"../":g | sed s:"LIBS \*= ":"LIBS *= ../":g > examples/release-win.pri
  exit
fi



if [ $1 == "web" ]
then
  test -d $WebDir || mkdir -p $WebDir
  test -d $WebDir/src || mkdir -p $WebDir/src

  cd examples
    echo " - Creating examples"
    makeDist
    echo " - Copy examples"
    test -d $WebDir/examples || rm -rf $WebDir/examples
    mkdir -p $WebDir/examples
    cp html/*.html $WebDir/examples
  cd - > /dev/null

  cd doc
    echo " - Filtering doc"
    makeDist
    filteredHTML=`grep -a ^filteredDir makeDist | cut -d'"' -f2`
    echo " - Copy result from $filteredHTML"
    rm -f $WebDir/*.html $WebDir/*.css
    cp $filteredHTML/* $WebDir
    cp qglviewer.css $WebDir
    
    echo " - Copy images"
    rm -rf $WebDir/images
    cp -r images $WebDir
    rm -rf $WebDir/images/.svn
    cp ../statsDownload/downloads.png ../statsDownload/examples.png $WebDir/images

    echo " - Copy refManual"
    rm -rf $WebDir/refManual
    cp -r refManual $WebDir
    #cp -r man $WebDir
    #cd latex ; make clear ; make pdf > /dev/null ; cp refman.pdf $WebDir/qglviewer.pdf
  cd - > /dev/null

  echo " - Checking web site links"
  cd $WebDir
  checkLinks.pl -r
  ls -1 src | grep -v "^lib" | grep -v "index.html" | grep -v "md5sum.txt"
  exit
fi


echo "Unrecognized option: $@"

