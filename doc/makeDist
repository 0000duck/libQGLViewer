#!/bin/bash

QGLVIEWER_HOME_DIR="$HOME/QGLViewer"
version=`grep -a "^version=" $QGLVIEWER_HOME_DIR/makeDist | head -1 | cut -d'"' -f2`
version_major=`echo $version | cut -d"." -f1`
WebURL=$(grep "^WebURL=" $QGLVIEWER_HOME_DIR/makeDist | head -1 | cut -d'=' -f2 | sed s%"\""%%g)

tmp="/tmp"
test -d $tmp || tmp="/home/debunne/.tmp"

if [ $# != 0 ]
then
  echo "No argument needed by makeDist. Try a cd .. first !"
  exit
fi



########################
### Date and version ###
########################
echo " - Filtering pages # tags"
export LC_TIME="en"
for f in `ls *.html`
do
  echo $f 
  date=`date -r $f "+%A, %B %-d, %Y"`
  sed s:"#VERSION#":"$version":g $f | sed s:"#VERSION_MAJOR#":"$version_major":g | sed s§"#WEBURL#"§"$WebURL"§g > $tmp/filtered
  sed s:"#DATE#":"$date":g $tmp/filtered > $f
done
unset LC_TIME


exit

### Check that doxygen is up to date ###
########################################
function updateDoc()
{
    echo " - doxygen skipped"
    doxygen Doxyfile
    echo " - Extracting cw files"
    cwExtractor
    cd refManual
    #doxytag -s search.idx >& /dev/null
    test -f installdox && rm installdox

    ### Changing header menu in doxygen pages ###
    echo " - Removing unused pages"
    rm -f files.html globals.html globals_*.html *_8*.html namespace*.html dir_*.html dirs.html
    rm -f functions_rela.html functions_vars.html functions_0x*.html

    echo " - Patching functions pages"
    for f in $(ls functions_*.html)
    do
      newName=$(echo $f | sed s%"_func"%%)
#      grep -v "^Here is a list" $f | sed s%"functions_func"%"functions"%g > $newName-bis
      grep -v "^Here is a list" $f | sed s%"functions_func"%"functions"%g | sed s%"| <a[^>]*>Variables</a>"%""%g | sed s%"| <a[^>]*>Related&nbsp;Functions</a>"%""%g | sed s%"<a[^>]*>All</a> |"%""%g > $newName-bis
      rm -r $f
      mv $newName-bis $newName
    done

    sed s%"This inheritance.*alphabetically:"%% hierarchy.html > $tmp/hierarchy.html
    mv $tmp/hierarchy.html hierarchy.html

    echo " - Changing QGLViewer:: enums"
    for f in $(ls class*.html)
    do
      sed s%">QGLViewer::\([A-Z_]*\)</a>"%">\1</a>"%g $f > $tmp/qgl
      mv $tmp/qgl $f
    done

    echo " - Changing header menus"
     #for f in `ls *.html *.php`
     #do
       #awk '/^<a class="qindex/ { gsub(" \\| ", ""); print }' $f > $tmp/header
       #sed s%"href=\"index.html\">Main"%"href=\"../index.html\">Main"% $tmp/header | sed s%"<a class=\"qindex\" href=\"globals.html\">File&nbsp;Members</a>"%% | sed s%"<a class=\"qindex\" href=\"namespaces.html\">Namespace List</a>"%% | sed s%"<a class=\"qindex\" href=\"annotated.*File&nbsp;List</a>"%% | sed s%"<a class=\"qindex\" href=\"globals.html\">File&nbsp;Members</a>"%% | sed s%"Class&nbsp;Members"%"All\&nbsp;Functions"% | sed s%"/a>"%"/a>\n"%g > $tmp/header.filtered
       #sed /"^<a class=\"qindex"/d $f | sed "/^<div class=\"qindex.*search.php/r $tmp/header.filtered" > $f.tmp
       #awk '/^<div class="nav">/ {skip=1; next} {if (skip) {skip=0; next} else print }' $f.tmp > $f
       #rm $f.tmp
     #done

    for f in $(ls *.html *.php)
    do
        if [ $f != "search.php" ]
        then
	  awk -f ../tabs.awk $f > $tmp/tabs
	  mv $tmp/tabs $f
        fi
    done
    
    echo " - Removing auto-links"
    for f in `ls class*.html | grep -v -- "-members.html"`
    do
      sed s%"<a class=\"el\" href=\"$f\">\([^<]*\)</a>"%"\1"%g $f > $f.tmp
      mv $f.tmp $f
    done

    echo " - Patching QtKeyboardModifiers and QtMouseButtons"
    for f in `ls *.html`
    do
      sed s%"QtKeyboardModifiers"%"Qt::KeyboardModifiers"%g $f > $f.tmp
      sed s%"QtMouseButtons"%"Qt::MouseButtons"%g $f.tmp > $f
      rm $f.tmp
    done

    echo " - Adding icon and libQGLViewer version"
    for f in $(ls *.html)
    do
      sed /doxygen.css/a"<link rel=\"shortcut icon\" href=\"../images/qglviewer.ico\" type=\"image/x-icon\" /><link rel=\"icon\" href=\"../images/qglviewer.icon.png\" type=\"image/png\" />" $f > $f.tmp
      sed s/"Generated on .* for libQGLViewer by"/"libQGLViewer $version documentation generated by"/g $f.tmp > $f
      rm $f.tmp
   done

    cd - > /dev/null
}

echo " - Checking doxygen refManual"
newer="../QGLViewer/qglviewer.h"
for f in `ls ../QGLViewer/*.h ../QGLViewer/*.cpp`
do
  if [ $f -nt $newer ]
  then
    newer=$f
  fi
done

if [ ! -d refManual ]
then
  echo "   refManual does not exist, running doxygen"
  echo "WINDOWS"
  updateDoc
fi

if [ "X$1" == "Xforce" ]
then
  echo "Force update : doxygen from windows"
  updateDoc
fi

for f in `ls refManual/class*`
do
  if [ $newer -nt $f ]
  then
    echo "   doxygen not up to date ($newer is newer)"
    echo "WINDOWS"
    #updateDoc
    break
  fi
done

